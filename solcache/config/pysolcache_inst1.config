##############################################################################
# Section: Connecting to the Solace Appliance
# These values are used by the messaging API to connect to the message bus.

# The client username and password. The password is optional if client 
# authentication is disabled.
SESSION_USERNAME cache
SESSION_PASSWORD cache


# The Solace appliance IP address the SolCache Instance must connect to.
# This address should be the primary address assigned to the msg-backbone
# on the appliance.
# For failover support, when running on a standalone Linux system, a 
# comma-separated list of IP addresses can be provided. 
#

# SESSION_HOST 192.168.130.61:55555
SESSION_HOST 69.20.234.126:22234
#SESSION_HOST XXX.XXX.XXX.XXX,YYY.YYY.YYY.YYY

# The local IP address to bind to for the SolCache Instance's outgoing connections.
# When running on a Solace appliance, this should be set to the appliance's static IP in the
# msg-backbone VRF so that connections originate from the NAB and make use of
# the NAB's TCP offload capabilities.
#
# When running on a standalone Linux server, this does not need to be set. The
# host TCP/IP stack will choose the best interface automatically.
#
#SESSION_BIND_IP xxx.xxx.xxx.xxx


# The message VPN the SolCache Instance must connect to.
SESSION_VPN_NAME pysol_test


# Session Client Name that is used to create a unique session.
# If undefined or empty string, a unique client name is generated 
# automatically.
# This name can be displayed on the Solace Appliance through the "show
# client *" CLI command.
SESSION_CLIENT_NAME pysolcache_client1


# A one-line description of the SolCache Instance. The description is shown
# on the CLI. This parameter is optional.
SESSION_APPLICATION_DESCRIPTION SolCache pysolcache_inst1.

# The SESSION_SUBSCRIBER_LOCAL_PRIORITY is used by the appliance to 
# determine which SolCache Instance has the highest priority for receiving
# cachce requests.  Cache requests from clients are delivered only to one
# SolCache Instance and only to one from the set of SolCache Instances 
# configured with the highest priority, where 1 is the highest and
# 4 is the lowest. If there are no priority 1 SolCache Instances, the appliance 
# falls back to delivering to a lower priority SolCache Instance in priority
# order: priority 2, then priority 3, and finally priority 4.
# If there are multiple SolCache Instances with the same priority setting,
# the appliance's deliver-to-one functionality attempts to evenly distribute 
# requests amongst those SolCache Instances.
#SESSION_SUBSCRIBER_LOCAL_PRIORITY 1
# The network priority is a future feature to define the priority of the
# SolCache Instance request subscriptions in a multiple appliance network.
#SESSION_SUBSCRIBER_NETWORK_PRIORITY 1

# The TCP connection to the Solace Appliance bus is polled with an inband
# KEEPALIVE message.  The SolCache Instance assumes the TCP connection has
# failed if this poll fails after sending SESSION_KEEP_ALIVE_LIMIT polls,
# with a period of SESSION_KEEP_ALIVE_INTERVAL_MS milliseconds 
SESSION_KEEP_ALIVE_INTERVAL_MS 3000
SESSION_KEEP_ALIVE_LIMIT 3

#############################################################################
# Section: communicating with the Designated Router
# The name of this SolCache Instance, as known by the Designated Router. This
# name must match that entered at the CLI with the "create cache-instance"
# command.
CACHE_INSTANCE_NAME pysolcache_inst1


##############################################################################
# Section: Environment
#
# CACHE_CPU_AFFINITY - hex mask to indicate which CPU the SolCache Instance is 
# allowed to use.
# for example a value of 0x01 indicates use CPU 0
#                        0x02 indicates use CPU 1
#                        0x04 indicates use CPU 2
#                        0x03 indicates use either CPU0 or CPU1
# This configurable CPU affinity is bounded by the 
# SOLACE_SOLCACHEINSTANCE_CPU_MASK environment variable.
# For example,  export SOLACE_SOLCACHEINSTANCE_CPU_MASK="0x07" will limit SolCache
# Instance to running on CPUS 0,1,2.  Hence the actual processor run on will
# be CACHE_CPU_AFFINITY & SOLACE_SOLCACHEINSTANCE_CPU_MASK
# if this results in an empty set, the process fails to start. 
# helpful hint: "ps -eo pid,psr,comm" will show which processor the SolCache
# Instance is actually using.
# default:  use any CPU (-1)
CACHE_CPU_AFFINITY -1


# API log level, mask out all logs generated by the messaging API  that are
# of a lower level than this. Valid values are: ERROR, WARN, NOTICE, INFO,
# DEBUG. This parameter is optional and reloadable. The default log level is NOTICE.
#CACHE_SDK_LOG_LEVEL NOTICE


# Cache log level, mask out SolCache Instance logs that are of a lower level than this.
# Valid values are: ERROR, WARN, NOTICE, INFO, DEBUG. This parameter is
# optional and reloadable. The default log level is NOTICE.
#CACHE_LOG_LEVEL NOTICE


# SolCache Instance logs utilize syslogd.
# see the syslog.conf man page for possible values
CACHE_SYSLOG_LOG_FACILITY local0


# A user-definable tag for all the logs generated by the SolCache Instance.
CACHE_SYSLOG_TAG tag


# SolCache Instance events utilize syslogd
# see the syslog.conf man page for possible values
CACHE_SYSLOG_EVENT_FACILITY local3


# Enable (1) or disable (0) filtering of messages with topics that start
# with "#P2P". Topics starting with "#P2P" are reserved for use by the
# appliance and SolCache Instance. When filtering is enabled, message topics
# that start with "#P2P" are not cached but silently discarded and a stat is
# incremented. This parameter is optional and reloadable. The default is that
# "#P2P" filtering is enabled.
#CACHE_P2P_FILTER 1


# A cache request may require multiple response messages to complete the
# transfer of all matching cached messages. In this case a session is 
# allocated for the response, and this session is used to track the progress 
# of the cache request. A session timeout parameter is required to handle the 
# case where communication between the SolCache Instance and the client is broken
# during the transfer. This parameter is optional and reloadable. 
# The default is 10 seconds.
#CACHE_SESSION_TIMEOUT_SEC 10


# A cache request may require multiple response messages to complete the
# transfer of all matching cached messages. This parameter controls the target 
# size of each response message. The SolCache Instance will insert as many messages as
# necessary to match the target size for each response message. Too large 
# a target size will cause the SolCache Instance to spend more time on each cache request
# which may reduce the responsiveness of the SolCache Instance. Too small a target size 
# will increase the number of response messages required to transfer a large
# number of messages, possibly increasing the total time to complete the cache 
# request, especially if the round trip time between the SolCache Instance and client is 
# long. Note that this parameter does not limit the size of a cached message
# that can be returned in a response message. This parameter is optional and 
# reloadable. The default is 50000 bytes.
#CACHE_REPLY_SIZE_LIMIT 50000


# This parameter sets the maximum number of event notifications that can be
# queued up waiting to be reported to the appliance. This parameter is optional
# and reloadable. The default is 10 event notification messages.
#CACHE_MAX_EVENT_QUEUE_DEPTH 10


# Enable (1) or disable (0) filtering of live data from a cache response. Each
# cache request is timestamped upon arrival at the SolCache Instance. When this feature is
# enabled, data that arrives after the cache request are not returned in the
# cache response. This feature is useful to reduce the number of duplicate messages
# seen by the client that made the cache request when the client is subscribed
# to receive live data. When this parameter is disabled, the SolCache Instance will return all
# available data up to the max-age and max-messages as specified in the cache request.
# This feature MUST NOT be enabled when the SolCache Instance is being used with a plugin that 
# applies incremental updates to already-cached messages. This parameter is 
# optional and reloadable. The default is that filtering of live data is disabled.
#CACHE_ENABLE_FILTER_LIVE_DATA 0


# This parameter controls the delay between subscribing for a global topic and
# sending the cache request for the global topic to the home cluster. This delay
# is necessary to allow the subscription to propagate to all nodes in the network
# before making the cache request. This parameter is optional and reloadable. 
# The default is 200 milliseconds.
#CACHE_GLOBAL_CACHE_REQUEST_DELAY_MS 200


# This parameter controls the timeout value for a global cache request to the 
# home cluster. If the home cluster does not respond to the cache request within
# the timeout time the global cache request is terminated and an error response
# is returned to the client. This parameter is optional and reloadable. 
# The default is 30 seconds.
#CACHE_GLOBAL_CACHE_REQUEST_TIMEOUT_SEC 30

# This parameter control the backup directory for SolCache Instance. When this
# parameter is set, it is the parent directory for all backup files created
# by the backup-cached-messages CLI command
# 
# CACHE_MSG_STORE_DIRECTORY
